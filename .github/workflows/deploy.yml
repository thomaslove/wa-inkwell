# This is a basic workflow to help you get started with Actions

name: Deploy via WebDAV

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Install cadaver WebDAV client
      - name: Install cadaver
        run: |
          sudo apt-get update
          sudo apt-get install -y cadaver

      - name: Setup .netrc for authentication
        run: |
          echo "machine ${{ secrets.WEBDAV_ENDPOINT }}" >> ~/.netrc
          echo "login ${{ secrets.WEBDAV_USERNAME }}" >> ~/.netrc
          echo "password ${{ secrets.WEBDAV_PASSWORD }}" >> ~/.netrc
        env:
          WEBDAV_ENDPOINT: ${{ secrets.WEBDAV_ENDPOINT }}
          WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}

      - name: Generate cadaver commands
        run: |
          # Create a temporary file to hold cadaver commands
          TEMP_COMMANDS="cadaver_commands.txt"

          REMOTE_LOCATION="Theme_Overrides/whiteboard_maya_blue.v3.0/"

          # connect to the server
          echo "open ${WEBDAV_ENDPOINT}" > $TEMP_COMMANDS

          # Loop through all files and directories in dist
          find dist -type f | while read -r file; do
            # Prepare the local and remote paths
            local_path="$file"
            remote_path="${REMOTE_LOCATION}$(echo "$file" | sed 's|^dist/||')"
            
            # Generate cadaver command for each file
            echo "put $local_path $remote_path" >> $TEMP_COMMANDS
          done

          # Add the 'bye' command to end the session
          echo "bye" >> $TEMP_COMMANDS

          # Print for the logs
          cat $TEMP_COMMANDS

          # Run cadaver with the generated commands
          cadaver -f $TEMP_COMMANDS

      - name: Cleanup
        run: |
          rm ~/.netrc
          rm cadaver_commands.txt
